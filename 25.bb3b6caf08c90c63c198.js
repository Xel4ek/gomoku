(()=>{"use strict";var b={564:(_,v)=>{v.m=class{constructor(){this._children=[]}get children(){return this._children}get parent(){return this._parent}get root(){return this._parent?this._parent.root:this}get nextSibling(){if(this._parent)return this._parent._children[this._parent._children.indexOf(this)+1]}get previousSibling(){if(this._parent)return this._parent._children[this._parent._children.indexOf(this)-1]}get firstChild(){return this._children[0]}get lastChild(){return this._children[this._children.length-1]}get previous(){const n=this.previousSibling;return n?n.lastDescendant||n:this._parent}get lastDescendant(){const n=this.lastChild;if(n)return n.lastDescendant||n}get next(){return this.firstChild||this.nextSibling||this.parentNext}get parentNext(){if(this._parent)return this._parent.nextSibling||this._parent.parentNext}after(n){if(this._parent)return this._parent.insertAfter(this,n)}before(n){if(this._parent)return this._parent.insertBefore(this,n)}remove(){if(this._parent)return this._parent.removeChild(this)}appendChild(n){return n.reparent(this),this._children.push(n),n}push(...n){return n.forEach(u=>u.reparent(this)),this._children.push(...n),this._children.length}insertAfter(n,u){return this.insertBefore(n?n.nextSibling:this.firstChild,u)}insertBefore(n,u){return n?this._children.includes(n)?(u.reparent(this),this._children.splice(this._children.indexOf(n),0,u),u):void 0:this.appendChild(u)}removeChild(n){const u=this._children.indexOf(n);if(u>=0)return this._children.splice(u,1),n._parent=void 0,n}isBefore(n){if(this===n)return 0;const u=[...this.ancestors(),this],p=[...n.ancestors(),n],x=Math.min(u.length,p.length);for(let g=0;g<x;++g){const w=u[g],E=p[g];if(w!==E){const S=u[g]._parent;if(!S)return 0;const z=S._children;return z.indexOf(w)<z.indexOf(E)?-1:1}}return u.length<p.length?-1:1}isChildOf(n){return this.parent===n||!!this.parent&&this.parent.isChildOf(n)}*childrenAfter(n){const u=this._children.length;for(let p=this._children.indexOf(n)+1;p<u;++p)yield this._children[p]}*childrenBefore(n){for(let u=this._children.indexOf(n)-1;u>=0;--u)yield this._children[u]}*previousSiblings(){this._parent&&(yield*this._parent.childrenBefore(this))}*nextSiblings(){this._parent&&(yield*this._parent.childrenAfter(this))}*descendants(){for(const n of this._children)yield n,yield*n.descendants()}*ancestors(){this._parent&&(yield*this._parent.ancestors(),yield this._parent)}reparent(n){this.remove(),this._parent=n}}}},A={};function B(_){var v=A[_];if(void 0!==v)return v.exports;var a=A[_]={exports:{}};return b[_](a,a.exports,B),a.exports}(()=>{var _=B(564);class v extends _.m{constructor(t){super(),this.selectedChild=NaN,this._moves=[],this._isTerminal=!0,this._value=t}get value(){return this._value}set value(t){this._value=t}get moves(){return this._moves}set moves(t){0===t.length&&console.error("empty"),this._moves=t}get isTerminal(){return this._isTerminal}set isTerminal(t){this._isTerminal=t}appendChild(t){return super.appendChild(t)}}var a=(()=>{return(s=a||(a={}))[s.EMPTY=0]="EMPTY",s[s.BLUE=1]="BLUE",s[s.RED=2]="RED",a;var s})();class O{constructor(t){if(this.score=NaN,this.s="",this.row=-1,this.col=-1,this.red=NaN,this.blue=NaN,this.i=-1,this.ch=[],this.pruning=!1,this.size=19,t instanceof class{constructor(){this.row=-1,this.col=-1}})this.row=t.row,this.col=t.col,this.idx=this.index();else{if("number"!=typeof t)throw RangeError;this.idx=t,this.parseIndex(t)}}index(){return this.row*this.size+this.col}parseIndex(t){this.row=Math.floor(t/this.size),this.col=t%this.size}}class y extends class{constructor(){this.score=NaN,this.scoreRed=NaN,this.scoreBlue=NaN,this.size=19,this.moves=[]}checkMoves(){return!1}}{constructor(t,e){super(),this.board=[],this.movesBlue=[],this.movesRed=[],t&&(this.createEmptyBoard(),t.player.map.forEach(i=>this.move(this.col(i),this.row(i),a.BLUE)),t.enemy.map.forEach(i=>this.move(this.col(i),this.row(i),a.RED)),this.movesBlue=[...t.player.map],this.movesRed=[...t.enemy.map]),e instanceof y&&(this.board=[...e.board.map(i=>[...i])],this.movesBlue=[...e.movesBlue],this.movesRed=[...e.movesRed])}row(t){return Math.floor(t/this.size)}col(t){return t%this.size}gameBoardToMatrix(t){for(const e of t.player.map)this.board[Math.floor(e/this.size)][e%this.size]=1;for(const e of t.enemy.map)this.board[e%this.size][Math.floor(e/this.size)]=2}adjacentCells(t){const e=[];return[-1,1,this.size+1,this.size,this.size-1,-this.size-1,1-this.size,-this.size].map(i=>{const r=t+i;r>=0&&r<=this.size*this.size&&Math.abs(t%this.size-r%this.size)<=1&&0===this.board[Math.floor(r/this.size)][r%this.size]&&e.push(r)}),e}aiMove(t,e,i,r){r&&this.capture(i),this.board[e][t]=i}move(t,e,i){this.board[e][t]=i}unmove(t,e){this.board[t][e]=a.EMPTY}capture(t){const e=this.findCaptures(t);for(const i of e)this.unmove(Math.floor(i/this.size),i%this.size)}findCaptures(t){const e=[],i=[];this.board.map((o,l)=>{o.map((d,f)=>{d===t?e.push(l*this.size+f):0!=d&&i.push(l*this.size+f)})});const r=[],h=19,c=e[e.length-1];return[-1,1,h+1,h,h-1,-h-1,1-h,-h].map(o=>{i.includes(c+o)&&i.includes(c+2*o)&&e.includes(c+3*o)&&(r.push(c+o),r.push(c+2*o))}),r}createEmptyBoard(){this.board=Array.from({length:this.size},()=>Array.from({length:this.size},()=>0))}moveList({useRandomMoveOrder:t}){const e=[...new Set(this.movesBlue.concat(this.movesRed).map(i=>this.adjacentCells(i)).flat())];return t&&e.sort(()=>Math.random()-.5),e.map(i=>new O(i))}checkMoves(){return this.moveList({useRandomMoveOrder:!0}),this.moves.length>0}}class D{constructor(){this.evaluationCount=0,this.winScore=1e6}evaluateBoardForRed(t,e){this.evaluationCount++,t.scoreBlue=this.getScore(t,!0,e),t.scoreRed=this.getScore(t,!1,e),0==t.scoreBlue&&(t.scoreBlue=1),t.score=t.scoreRed-t.scoreBlue}getConsecutiveSetScore(t,e,i){const r=1e6;if(2==e&&t<5)return 0;switch(t){case 5:return this.winScore;case 4:return i?r:0==e?r/4:200;case 3:return 0==e?i?5e4:200:i?10:5;case 2:return 0==e?i?7:5:3;case 1:return 1}return 2*this.winScore}getScore(t,e,i){return this.evaluateHorizontal(t,e,i)+this.evaluateVertical(t,e,i)+this.evaluateDiagonal(t,e,i)}evaluateHorizontal(t,e,i){let r=0,h=2,c=0;for(let o=0;o<t.board.length;o++){for(let l=0;l<t.board[0].length;l++){const d=this.extracted(t,o,l,e,r,h,c,i);r=d.consecutive,h=d.blocks,c=d.score}r>0&&(c+=this.getConsecutiveSetScore(r,h,e==i)),r=0,h=2}return c}extracted(t,e,i,r,h,c,o,l){return t.board[e][i]==(r?a.BLUE:a.RED)?h++:0==t.board[e][i]?(h>0&&(c--,o+=this.getConsecutiveSetScore(h,c,r==l),h=0),c=1):(h>0&&(o+=this.getConsecutiveSetScore(h,c,r==l),h=0),c=2),{consecutive:h,blocks:c,score:o}}evaluateVertical(t,e,i){let r=0,h=2,c=0;for(let o=0;o<t.board[0].length;o++){for(let l=0;l<t.board.length;l++)t.board[l][o]===(e?a.BLUE:a.RED)?r++:0==t.board[l][o]?(r>0&&(h--,c+=this.getConsecutiveSetScore(r,h,e==i),r=0),h=1):(r>0&&(c+=this.getConsecutiveSetScore(r,h,e==i),r=0),h=2);r>0&&(c+=this.getConsecutiveSetScore(r,h,e==i)),r=0,h=2}return c}evaluateDiagonal(t,e,i){let r=0,h=2,c=0;for(let o=0;o<=2*(t.board.length-1);o++){const l=Math.max(0,o-t.board.length+1),d=Math.min(t.board.length-1,o);for(let f=l;f<=d;++f){const m=this.extracted(t,f,o-f,e,r,h,c,i);r=m.consecutive,h=m.blocks,c=m.score}r>0&&(c+=this.getConsecutiveSetScore(r,h,e==i)),r=0,h=2}for(let o=1-t.board.length;o<t.board.length;o++){const l=Math.max(0,o),d=Math.min(t.board.length+o-1,t.board.length-1);for(let f=l;f<=d;++f){const m=this.extracted(t,f,f-o,e,r,h,c,i);r=m.consecutive,h=m.blocks,c=m.score}r>0&&(c+=this.getConsecutiveSetScore(r,h,e==i)),r=0,h=2}return c}evaluateNode(t,e){if(!(t instanceof y))throw TypeError;this.evaluateBoardForRed(t,e===a.BLUE)}checkWin(t,e){if(t instanceof y)return this.evaluateBoardForRed(t,e===a.BLUE),t.score>=this.winScore;throw TypeError}}let L=(()=>{class s{constructor(e=3){this.count=0,this.treeCapacity=0,this.scoringService=new D,this.config={findCaptures:!0,useRandomMoveOrder:!0},this.depth=e}static getStrategy(e){return s.instance[e]||(s.instance[e]=new s(e)),s.instance[e]}negamax(e,i,r,h,c){this.negamaxOld(e,i,r,h,c)}negamaxOld(e,i,r,h,c){if(0===i)return this.scoringService.evaluateNode(e.value,1===c?a.BLUE:a.RED),e.value.score=c*e.value.score,e;if(e.moves=e.value.moveList(this.config),0===e.moves.length)return this.scoringService.evaluateNode(e.value,1===c?a.BLUE:a.RED),e.value.score=c*e.value.score,console.error(e),e;this.treeCapacity+=e.moves.length;let o=Number.NEGATIVE_INFINITY;for(const l in e.moves){++this.count;const d=new y(void 0,e.value);d.aiMove(e.moves[l].col,e.moves[l].row,1===c?a.RED:a.BLUE,this.config.findCaptures),d.lastMove=e.moves[l];const f=new v(d);if(e.appendChild(f),this.scoringService.checkWin(f.value,1===c?a.BLUE:a.RED))return e.value.score=1e7*c,e.selectedChild=Number(l),e;if(this.negamax(f,i-1,-h,-r,-c),-f.value.score>o&&(o=-f.value.score,e.selectedChild=Number(l),e.value.score=o,e.value.scoreBlue=f.value.scoreBlue,e.value.scoreRed=f.value.scoreRed),e.moves[l].score=-f.value.score,e.moves[l].red=f.value.scoreRed,e.moves[l].blue=f.value.scoreBlue,e.moves[l].ch=e.children[e.selectedChild].moves,(r=r>=o?r:o)>=h){e.moves[e.selectedChild].pruning=!0;break}}return e.moves[e.selectedChild].s="--\x3e",e}createInstance(e,i){return new i(e)}getNextTurn(e){if(this.count=0,this.treeCapacity=0,!e.player.map.length&&!e.enemy.map.length)return{turn:180,count:this.count,capacity:this.treeCapacity};const i=this.createInstance(e,y),r=new v(i);this.negamax(r,this.depth,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,1);const h=r.children[r.selectedChild].value.lastMove;return{count:this.count,capacity:this.treeCapacity,turn:h?h.index():-1}}}return s.instance={},s})();var C=(()=>{return(s=C||(C={})).HUMAN="human",s.AI="ai",C;var s})();addEventListener("message",({data:s})=>{const t=performance.now();let e={};s.id%2&&s.enemy.type===C.AI&&(e=L.getStrategy(s.enemy.options.deep).getNextTurn(s)),!(s.id%2)&&s.player.type===C.AI&&(e=L.getStrategy(s.player.options.deep).getNextTurn({...s,player:s.enemy,enemy:s.player})),postMessage({...e,delta:performance.now()-t})})})()})();